services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-manage}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "8081:8080"
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgres://postgres:postgres@postgres:5432/manage?sslmode=disable}
      - PORT=${PORT:-8080}
      - GIN_MODE=${GIN_MODE:-debug}
      - APP_NAME=${APP_NAME:-Church Management System}
      - CHURCH_NAME=${CHURCH_NAME:-Muang Thai Korat Church}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - SMTP_FROM=${SMTP_FROM}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - JWT_SECRET=${JWT_SECRET:-change-this-to-a-secure-random-string-in-production}
      - JWT_EXPIRATION=${JWT_EXPIRATION:-24h}
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:3000}
    volumes:
      - .:/app
      - /app/tmp
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - NODE_ENV=${NODE_ENV:-development}
      - VITE_API_URL=${VITE_API_URL:-http://localhost:8081}
    restart: unless-stopped

volumes:
  postgres_data:
