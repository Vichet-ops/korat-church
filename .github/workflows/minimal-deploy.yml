name: Minimal Deploy

on:
  push:
    branches: [disabled]

jobs:
  minimal-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build frontend
        run: |
          cd frontend
          npm ci
          npm run build

      - name: Build backend
        run: |
          go mod download
          GOOS=linux GOARCH=amd64 go build -o church-app main.go

      - name: Create package
        run: tar -czf deploy.tar.gz church-app frontend/dist

      - name: Deploy
        env:
          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
          DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
        run: |
          echo "🚀 Minimal deployment starting..."
          
          # Setup SSH (exact copy from working test)
          mkdir -p ~/.ssh
          echo "$DEPLOY_KEY" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          
          # Test SSH (exact same command that works)
          echo "🔍 Testing SSH..."
          ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no -o ConnectTimeout=10 $DEPLOY_USER@$DEPLOY_HOST "echo 'SSH works'"
          
          # Upload
          echo "📤 Uploading..."
          scp -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no deploy.tar.gz $DEPLOY_USER@$DEPLOY_HOST:/tmp/
          
          # Deploy
          echo "🚀 Deploying..."
          ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no $DEPLOY_USER@$DEPLOY_HOST "cd $DEPLOY_PATH && tar -xzf /tmp/deploy.tar.gz && cp -r frontend/dist/* /var/www/vichetkeo.com/html/ && pkill -f church-app || true && chmod +x church-app && DATABASE_URL='postgres://church_user:church123@localhost:5432/church_db?sslmode=disable' JWT_SECRET='your-jwt-secret-key-here' GIN_MODE=release nohup ./church-app > church-app.log 2>&1 &"
          
          echo "✅ Done!"
