name: Test Church Website

# Trigger on pull requests and manual dispatch
on:
  pull_request:
    branches: [main]
  workflow_dispatch: # Allows manual triggering

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: church_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install Go dependencies
        run: go mod download

      - name: Install frontend dependencies
        run: cd frontend && npm ci

      - name: Run Go tests
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/church_test?sslmode=disable
          JWT_SECRET: test-secret-key
          GIN_MODE: test
        run: go test ./...

      - name: Run frontend tests
        run: cd frontend && npm test -- --coverage --watchAll=false

      - name: Build frontend
        run: cd frontend && npm run build

      - name: Build Go application
        run: go build -o church-app main.go

      - name: Test build artifacts
        run: |
          echo "✅ Go application built successfully"
          ls -la church-app
          echo "✅ Frontend built successfully"
          ls -la frontend/dist/
